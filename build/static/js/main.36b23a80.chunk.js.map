{"version":3,"sources":["components/card/card-component.jsx","components/card-list/card-list-component.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","bass","image","name","style","CardList","bassplayers","map","id","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","bassPlayer","setState","this","filteredBassplayers","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAGaA,G,MAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAI,aAAaC,IAAKH,EAAMI,KAAKC,QACtC,6BAAKL,EAAMI,KAAKE,OAChB,6BAAKN,EAAMI,KAAKG,aCFPC,G,MAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,YAAYC,KAAI,SAACN,GAAD,OACrB,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKO,WCJTC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEb,UAAU,YACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCCG,G,wDAvCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXT,YAAa,GACbU,YAAa,IAJH,E,gEAQO,IAAD,OAClBC,MACE,yEAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAgB,EAAKC,SAAS,CAAEhB,YAAae,S,+BAE7C,IAAD,SAC8BE,KAAKR,MAAlCT,EADD,EACCA,YAAaU,EADd,EACcA,YACfQ,EAAsBlB,EAAYmB,QAAO,SAACJ,GAAD,OAC7CA,EAAWjB,MAAMsB,cAAcC,SAASX,EAAYU,kBAEtD,OACE,sBAAK5B,UAAU,MAAf,UACE,8CACA,uBACA,8BACE,2CADF,0CAEE,4CAFF,6CAIA,cAAC,EAAD,CACEY,YAAY,wBACZC,aAAc,SAACiB,GAAD,OAAO,EAAKN,SAAS,CAAEN,YAAaY,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAUxB,YAAakB,IACvB,gG,GAlCUO,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.36b23a80.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./card-component.css\";\nexport const Card = (props) => (\n  <div className=\"card\">\n    <img alt=\"bassplayer\" src={props.bass.image}></img>\n    <h2>{props.bass.name}</h2>\n    <h3>{props.bass.style}</h3>\n  </div>\n);\n","import React from \"react\";\nimport { Card } from \"../card/card-component\";\n\nimport \"./card-list-component.css\";\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.bassplayers.map((bass) => (\n      <Card key={bass.id} bass={bass}></Card>\n    ))}\n  </div>\n);\n","import React from \"react\";\n\nimport \"./search-box.css\";\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"searchBox\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange}\n  />\n);\n","import React, { Component } from \"react\";\n\nimport { CardList } from \"./components/card-list/card-list-component\";\nimport { SearchBox } from \"./components/search-box/search-box-component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      bassplayers: [],\n      searchField: \"\",\n    };\n  }\n\n  componentDidMount() {\n    fetch(\n      \"https://my-json-server.typicode.com/CodingDesigns/basslist/bassPlayer\"\n    )\n      .then((response) => response.json())\n      .then((bassPlayer) => this.setState({ bassplayers: bassPlayer }));\n  }\n  render() {\n    const { bassplayers, searchField } = this.state;\n    const filteredBassplayers = bassplayers.filter((bassPlayer) =>\n      bassPlayer.style.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Bass Rolodex</h1>\n        <hr />\n        <p>\n          <span>Are you</span> more into jazz, fusion or groove ?&nbsp;\n          <span>Find out</span> which bass player you must listen to !\n        </p>\n        <SearchBox\n          placeholder=\"Type your word here !\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <CardList bassplayers={filteredBassplayers}></CardList>\n        <p>In fact, you should listen to all of them ! ðŸ˜‰</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}